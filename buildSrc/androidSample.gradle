import ru.surfstudio.android.build.Components
import ru.surfstudio.android.build.DependencyConfigurator
import ru.surfstudio.android.build.GradlePropertiesManager

apply from: "$rootDir/buildSrc/config.gradle"
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "$rootDir/buildSrc/androidTestModule.gradle"

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.sampleMinSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.moduleVersionCode
        versionName Components.getModuleVersion(project.name)
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            /**
             * All modules and transitive dependencies of mirror component
             * must have a mirror module as a local dependency
             * to avoid errors with dependency conflict
             */
            if (GradlePropertiesManager.isCurrentComponentAMirror()) {
                Components.getComponentLibraries(GradlePropertiesManager.componentMirrorName)
                        .forEach {
                            def libraryName = it.name
                            substitute module("ru.surfstudio.android:$libraryName") with project(":$libraryName")
                        }
            }
        }
    }
}

dependencies {
    implementation project(":sample-dagger")

    DependencyConfigurator.projectImplementation(project, "dagger-scope")
    DependencyConfigurator.projectImplementation(project, "rxbus")
    DependencyConfigurator.projectImplementation(project, "core-ui")
    DependencyConfigurator.projectImplementation(project, "core-navigation")
    DependencyConfigurator.projectImplementation(project, "permission")
    DependencyConfigurator.projectImplementation(project, "core-mvp")
    DependencyConfigurator.projectImplementation(project, "rx-extension")
    DependencyConfigurator.projectImplementation(project, "connection")
    DependencyConfigurator.projectImplementation(project, "message-controller")
    DependencyConfigurator.projectImplementation(project, "network")
    DependencyConfigurator.projectImplementation(project, "activity-holder")
    DependencyConfigurator.projectImplementation(project, "logger")
    DependencyConfigurator.projectImplementation(project, "util-ktx")

    DependencyConfigurator.implementation(project, "org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    DependencyConfigurator.implementation(project, "org.jetbrains.anko:anko-common")
    DependencyConfigurator.implementation(project, "androidx.appcompat:appcompat")
    DependencyConfigurator.implementation(project, "androidx.constraintlayout:constraintlayout")

    androidTestImplementation project(":sample-common")
}

task printTestInstrumentationRunnerName {
    doLast {
        println "$android.defaultConfig.testInstrumentationRunner"
    }
}