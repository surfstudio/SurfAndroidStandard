import ru.surfstudio.android.build.artifactory.ArtifactoryConfig
import ru.surfstudio.android.build.Components
import ru.surfstudio.android.build.ConfigInfoProvider
import ru.surfstudio.android.build.GradleProperties
import ru.surfstudio.android.build.publish.PublishConfig

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = ArtifactoryConfig.ANDROID_STANDARD_GROUP_ID
version = ConfigInfoProvider.getVersion()

task sourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

ext["signing.keyId"] = System.getenv("surf_maven_sign_key_id")
ext["signing.password"] = System.getenv("surf_maven_sign_password")
ext["signing.secretKeyRingFile"] = System.getenv("surf_maven_sign_key_ring_file")

signing {
    sign publishing.publications
}

// always deploy version-plugin to artifactory
publishing {
    publications {
        maven(MavenPublication) {
            groupId = ArtifactoryConfig.ANDROID_STANDARD_GROUP_ID
            artifactId = "version-plugin"
            version = ConfigInfoProvider.getVersion()

            from components.java

            pom {
                name = Components.getArtifactName(project.name)
                description = Components.getArtifactDescription(project.name)
                url = Components.getArtifactUrl(project.name)

                organization {
                    name = PublishConfig.DEVELOPER_ORGANISATION
                    url = PublishConfig.DEVELOPER_ORGANISATION_URL
                }

                issueManagement {
                    system = PublishConfig.ISSUE_MANAGEMENT_SYSTEM
                    url = PublishConfig.ISSUE_MANAGEMENT_URL
                }

                licenses {
                    license {
                        name = PublishConfig.LICENSE_NAME
                        url = PublishConfig.LICENSE_URL
                    }
                }

                scm {
                    connection = PublishConfig.SCM_CONNECTION
                    developerConnection = PublishConfig.SCM_DEVELOPER_CONNECTION
                    url = PublishConfig.SCM_URL
                }

                developers {
                    developer {
                        name = PublishConfig.DEVELOPER_NAME
                        email = PublishConfig.DEVELOPER_MAIL
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = PublishConfig.REPOSITORY_NAME
            url = ArtifactoryConfig.DEPLOY_URL
            credentials {
                username System.getenv(ArtifactoryConfig.USERNAME_ENV_NAME)
                password System.getenv(ArtifactoryConfig.PASSWORD_ENV_NAME)
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    doFirst {
        println("Publishing ${publication.groupId}:${publication.artifactId}:${publication.version} to ${repository.url}")
    }
}

ext.checkAndDisableTask = { task ->
    if (project.hasProperty(GradleProperties.COMPONENT) ||
            task.publication.hasProperty('artifactId') && task.publication.artifactId == project.name
    ) {
        task.enabled = false
        task.group = null
    }
}

// deploy version-plugin with custom name; disable additional publishPluginMavenPublicationToExternalRepository task
// which deploys "android-standard-version-plugin" by default
afterEvaluate {
    tasks.withType(PublishToMavenRepository) { task ->
        checkAndDisableTask(task)
    }
}